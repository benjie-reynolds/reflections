When would you want to use a remote repository rather than keeping all your work local?

A remote repository is beneficial for allowing others to collaborate on your project,
as well as being able to access your files from anywhere on any device. It also can
serve as a backup.


Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

If you're working on something new locally, the automatic pulls from the remote repo
could cause some unwanted loss of your work. Keeping things manual keeps the user
in control of the data.


Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks - Good for cloning someone elses repository to your own remote account, and giving credit to the
original author. You'd use this if you cannot edit the original remote repo.

Clones - Clones are local and are good for working offline and then can be pushed back to the remote repo.

Branches - Good for working on new segments of code or something that may not be ready to be seen.
Somewhat like a rough draft.


What is the benefit of having a copy of the last known state of the remote stored locally?
This could be useful in keeping your local clone up to date to prevent conflicts. If you wait too long
to pull from the remote, you may end up having many more conflicts than you want to deal with.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would probably use Google docs or dropbox. It could be easier for those who don't want to learn a new system,
but it would not be as well organized and managed as it could be with git and github.

